[{"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/index.js":"1","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/App.js":"2","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/reportWebVitals.js":"3","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Main.js":"4","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/ApolloServerProvider.js":"5","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Todo.js":"6","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/AddTodo.js":"7","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/FetchQueries.js":"8","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Constants.js":"9","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/DialogTodo.js":"10"},{"size":188,"mtime":1612709160789,"results":"11","hashOfConfig":"12"},{"size":144,"mtime":1612541034307,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611672930382,"results":"14","hashOfConfig":"12"},{"size":291,"mtime":1613661618408,"results":"15","hashOfConfig":"12"},{"size":499,"mtime":1612606638952,"results":"16","hashOfConfig":"12"},{"size":2881,"mtime":1613490868275,"results":"17","hashOfConfig":"12"},{"size":1476,"mtime":1613661605907,"results":"18","hashOfConfig":"12"},{"size":533,"mtime":1612715173350,"results":"19","hashOfConfig":"12"},{"size":650,"mtime":1613662165065,"results":"20","hashOfConfig":"12"},{"size":1920,"mtime":1613491530428,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19pgbst",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/index.js",[],["46","47"],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/App.js",[],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/reportWebVitals.js",[],["48","49"],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Main.js",[],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/ApolloServerProvider.js",[],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Todo.js",["50","51"],"import React, { useState } from 'react';\nimport DialogTodo from './DialogTodo';\nimport { useMutation } from '@apollo/react-hooks';\nimport { fetch_todos, delete_todo } from './Constants';\nimport { IconButton, Button, makeStyles, Grid, Paper, Checkbox } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { MdModeEdit, MdDelete } from 'react-icons/md';\n\n\n\nfunction Todo({ id, title, completed, createdAt }) {\n\tlet dateData = new Date(Number(createdAt))\n\tlet date = dateData.getDate()\n\tlet month = dateData.getMonth()\n\tlet year = dateData.getFullYear()\n\tlet time = `${date}-${month}-${year} `\n\n\n\n\tconst [openEditTodoDialog, setOpenEditTodoDialog] = useState(false);\n\tconst [updatedTodoTitle, setUpdatedTodoTitle] = useState(\"\");\n\tconst [checked, setChecked] = useState(true);\n\tconst [updateTodoId, setUpdateTodoId] = useState(\"\");\n\t\n\tconst [deleteTodo] = useMutation(delete_todo, {refetchQueries: [{query:fetch_todos}]});\n\n\tconst handleDelete = (e) => {\n\t\tconst id = e.target.id;\n\t\tdeleteTodo({ variables: { id } });\n\t\t\n\t}\n\n\tconst handleEdit = e => {\n\t\tsetOpenEditTodoDialog(true);\n\t\tlet receivedCheckedStatus = e.target.parentNode.parentNode.childNodes[1].childNodes[0].childNodes[0].childNodes[0].checked;\n\t\tlet title = e.target.parentNode.parentNode.childNodes[0].childNodes[0].data;\n\t\tsetUpdatedTodoTitle(title);\n\t\tsetChecked(receivedCheckedStatus);\n\t\tsetUpdateTodoId(e.target.id);\n\t}\n\n\tconst useStyles = makeStyles({\n\t\n\t\tpaperClass: {\n\t\t\twidth:\"30%\",\n\t\t\tmargin:\"20px auto\",\n\t\t\tpadding:\"10px 30px 10px 30px\",\n\t\t\tfontSize:\"1.2rem\",\n\t\t\ttextAlign:\"left\"\n\t\t},\n\t});\n\n\tconst theme = createMuiTheme({\n  overrides: {\n  \tMuiIconButton: {\n  \t\tlabel: {\n  \t\t\tpointerEvents:\"none\",\n  \t\t}\n  \t }\n  \t}\n  });\n\tconst classes = useStyles();\n\t\nreturn (\n\n\t<>\n\t\t<ThemeProvider theme={theme}>\n\n\t\t\t<Paper elevation={3} className={classes.paperClass}>\n\n\t\t\t\t<Grid container alignItems=\"center\" spacing={1} className={classes.gridContainer}>\n\n\t\t\t\t\t<Grid item md={9} sm={6} >\n\t\t\t\t\t\t{title} \n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={1} sm={2}>\n\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item md={1} sm={2}>\n\t\t\t\t\t\t<IconButton id={id} color=\"primary\" onClick={e => handleEdit(e)} > <MdModeEdit className={classes.disableClick}/> </IconButton>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item md={1} sm={2}>\n\t\t\t\t\t\t<IconButton id={id} color=\"secondary\" onClick={e => handleDelete(e)} > <MdDelete/> </IconButton>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Grid>\n\n\t\t\t</Paper> \n\n\t\t</ThemeProvider>\n\n\t\t<DialogTodo \n\t\topenEditTodoDialog={openEditTodoDialog} \n\t\tsetOpenEditTodoDialog={setOpenEditTodoDialog} \n\t\tupdatedTodoTitle={updatedTodoTitle} \n\t\tsetUpdatedTodoTitle={setUpdatedTodoTitle} \n\t\tchecked={checked} \n\t\tsetChecked={setChecked} \n\t\tupdateTodoId={updateTodoId}\n\t\tsetUpdateTodoId={setUpdateTodoId}\n\t\t/>\n\n\t</>\n\n\t);\n\n}\n\nexport default Todo;","/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/AddTodo.js",["52","53","54","55"],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/FetchQueries.js",[],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/Constants.js",[],"/home/prabh/Desktop/Prabh/ApolloGraphQL/todo/src/components/DialogTodo.js",["56","57"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Dialog, DialogTitle, Grid, DialogContent, DialogActions, TextField, Typography, Button, Checkbox, IconButton } from '@material-ui/core';\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from 'react-icons/md';\nimport { edit_todo, fetch_todos } from './Constants';\n\nfunction DialogTodo({ openEditTodoDialog,\n\t\t\t\t\t\tsetOpenEditTodoDialog,\n\t\t\t\t\t\tupdatedTodoTitle,\n\t\t\t\t\t\tsetUpdatedTodoTitle,\n\t\t\t\t\t\tchecked,\n\t\t\t\t\t\tsetChecked,\n\t\t\t\t\t\tupdateTodoId,\n\t\t\t\t\t\t }) {\n\n\t\nconst [ editTodo ] = useMutation(edit_todo, { refetchQueries: [{ query:fetch_todos }] })\n\n\tconst handleClose = () => {\n\t\tsetOpenEditTodoDialog(false);\n\t}\n\n\tconst handleChange = e => {\n\t\tsetUpdatedTodoTitle(e.target.value)\n\t}\n\n\tconst handleCheckbox = (event) => {\n    setChecked(!checked);\n  };\n\n  \tconst handleUpdate = () => {\n\n  \t\teditTodo({ variables: { id:updateTodoId, title:updatedTodoTitle, completed:checked } })\n  \t\thandleClose();\n  \t}\n\nconsole.log(updatedTodoTitle)\n\n\treturn (\n\t\t\n\t\t<Dialog fullWidth open={openEditTodoDialog} onClose={handleClose}>\n\t\t\t<DialogTitle> \n\t\t\t\t<Typography >Edit Todo</Typography>\n\t\t\t</DialogTitle>\n\t\t\t<Grid container \n\t\t\tjustify=\"center\"\n\t\t\tdirection=\"row\"\n\t\t\t\n\t\t\t>\n\t\t\t<DialogContent> \n\t\t\t\t<Grid item xs={10}>\n\t\t\t\t<TextField \n\t\t\t\t\tvalue={updatedTodoTitle}\n\t\t\t\t\tonChange={e=>{handleChange(e)}}\n\t\t\t\t\tvariant=\"outlined\"\n\n\t\t\t\t/> \t\t\t\t\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={1}>\n\t\t\t\t<IconButton onClick={handleCheckbox}> { checked  ? <MdCheckBox /> : <MdCheckBoxOutlineBlank /> } </IconButton>\n\t\t\t\t</Grid>\n\n\t\t\t</DialogContent>\n\t\t\t</Grid>\n\n\t\t\t<DialogActions> \n\t\t\t\t<Button color=\"primary\" size=\"small\" variant=\"contained\" onClick={ handleUpdate }> Update Todo </Button>\n\t\t\t\t<Button color=\"secondary\" size=\"small\" variant=\"contained\" onClick={handleClose}> Cancel </Button>\n\n\n\t\t\t</DialogActions>\n\n\t\t</Dialog>\n\t\t\n\t\t\n\t\t);\n}\n\nexport default DialogTodo;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":22,"nodeType":"66","messageId":"67","endLine":5,"endColumn":28},{"ruleId":"64","severity":1,"message":"68","line":16,"column":6,"nodeType":"66","messageId":"67","endLine":16,"endColumn":10},{"ruleId":"64","severity":1,"message":"65","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"64","severity":1,"message":"69","line":3,"column":18,"nodeType":"66","messageId":"67","endLine":3,"endColumn":28},{"ruleId":"64","severity":1,"message":"70","line":3,"column":30,"nodeType":"66","messageId":"67","endLine":3,"endColumn":35},{"ruleId":"64","severity":1,"message":"71","line":42,"column":8,"nodeType":"66","messageId":"67","endLine":42,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"73","line":3,"column":98,"nodeType":"66","messageId":"67","endLine":3,"endColumn":106},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'time' is assigned a value but never used.","'Typography' is defined but never used.","'Input' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]